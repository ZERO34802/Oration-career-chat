// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/*
  Improvements:
  - User.email is now required (not nullable) and unique for credentials auth.
  - ChatSession.userId is required; sessions must belong to a user.
  - Added @@unique([userId, id]) is unnecessary; primary key already unique.
  - Kept composite indexes for common queries.
*/

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  name         String?
  image        String?
  passwordHash String?       // null for OAuth users
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  sessions     ChatSession[]
}

model ChatSession {
  id        String      @id @default(uuid())
  user      User?       @relation(fields: [userId], references: [id])
  userId    String?     // keep nullable for now
  title     String      @default("New session")
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  messages  Message[]

  @@index([userId])
  @@index([updatedAt])
}


model Message {
  id        String      @id @default(uuid())
  session   ChatSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId String
  role      Role
  content   String
  createdAt DateTime    @default(now())

  @@index([sessionId, createdAt])
}

enum Role {
  user
  assistant
  system
}
